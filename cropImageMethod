  /**
     * @description: 传入base64图片，返回裁剪后的base64图片
     * 调用方法：cropImage(url).then(res => {console.log(res)});
     * @param {string} base64
     * @return {string} base64
     */
    function cropImage(base64: string) {
        return new Promise((resolve, reject) => {
            const img = new Image();
            img.src = base64;
            img.onload = () => {
                const c = document.createElement('canvas');
                console.log(c, 3333);

                const ctx = c.getContext('2d');
                c.width = img.width;
                c.height = img.height;
                ctx!.drawImage(img, 0, 0);
                const imgData = ctx!.getImageData(0, 0, c.width, c.height).data;
                let lOffset = c.width,
                    rOffset = 0,
                    tOffset = c.height,
                    bOffset = 0;

                for (let i = 0; i < c.width; i++) {
                    for (let j = 0; j < c.height; j++) {
                        const pos = (i + c.width * j) * 4;
                        if (
                            imgData[pos] === 255 ||
                            imgData[pos + 1] === 255 ||
                            imgData[pos + 2] === 255 ||
                            imgData[pos + 3] === 255
                        ) {
                            bOffset = Math.max(j, bOffset);
                            rOffset = Math.max(i, rOffset);
                            tOffset = Math.min(j, tOffset);
                            lOffset = Math.min(i, lOffset);
                        }
                    }
                }

                lOffset++;
                rOffset++;
                tOffset++;
                bOffset++;

                const canvas = document.createElement('canvas');
                canvas.width = rOffset - lOffset;
                canvas.height = bOffset - tOffset;
                const ctx2 = canvas.getContext('2d');
                ctx2!.drawImage(
                    img,
                    lOffset,
                    tOffset,
                    canvas.width,
                    canvas.height,
                    0,
                    0,
                    canvas.width,
                    canvas.height
                );

                resolve(canvas.toDataURL());
            };

            img.onerror = reject;
        });
    }
